/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as ALayoutRouteImport } from './routes/_a/_layout'
import { Route as ALayoutHomeIndexRouteImport } from './routes/_a/_layout/_home/index'

const RegisterLazyRouteImport = createFileRoute('/register')()
const LoginLazyRouteImport = createFileRoute('/login')()

const RegisterLazyRoute = RegisterLazyRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))
const LoginLazyRoute = LoginLazyRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const ALayoutRoute = ALayoutRouteImport.update({
  id: '/_a/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const ALayoutHomeIndexRoute = ALayoutHomeIndexRouteImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => ALayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/': typeof ALayoutHomeIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/': typeof ALayoutHomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/_a/_layout': typeof ALayoutRouteWithChildren
  '/_a/_layout/_home/': typeof ALayoutHomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/register' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/register' | '/'
  id: '__root__' | '/login' | '/register' | '/_a/_layout' | '/_a/_layout/_home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginLazyRoute: typeof LoginLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  ALayoutRoute: typeof ALayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_a/_layout': {
      id: '/_a/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ALayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_a/_layout/_home/': {
      id: '/_a/_layout/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ALayoutHomeIndexRouteImport
      parentRoute: typeof ALayoutRoute
    }
  }
}

interface ALayoutRouteChildren {
  ALayoutHomeIndexRoute: typeof ALayoutHomeIndexRoute
}

const ALayoutRouteChildren: ALayoutRouteChildren = {
  ALayoutHomeIndexRoute: ALayoutHomeIndexRoute,
}

const ALayoutRouteWithChildren =
  ALayoutRoute._addFileChildren(ALayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LoginLazyRoute: LoginLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  ALayoutRoute: ALayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
